// <auto-generated />
using System;
using BootcampMarket.Data.MSSQL.Context.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BootcampMarket.Data.MSSQL.Migrations.EntityFramework.Migrations
{
    [DbContext(typeof(BootcampMarketDbContext))]
    [Migration("20211026201912_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("City");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DistrictId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CustomerAddress");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.CustomerDetail", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId")
                        .HasName("PK_CustomerDetail_1");

                    b.ToTable("CustomerDetail");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("District");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<byte>("Discount")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.ProductComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductComment");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("binary(32)")
                        .IsFixedLength(true);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.City", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_City_Country")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "CreatedBy")
                        .WithMany("CityCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_City_User")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "DeletedBy")
                        .WithMany("CityDeletedBy")
                        .HasForeignKey("DeletedById")
                        .HasConstraintName("FK_City_User2");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "ModifiedBy")
                        .WithMany("CityModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_City_User1");

                    b.Navigation("Country");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Country", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "CreatedBy")
                        .WithMany("CountryCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Country_User")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "DeletedBy")
                        .WithMany("CountryDeletedBy")
                        .HasForeignKey("DeletedById")
                        .HasConstraintName("FK_Country_User2");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "ModifiedBy")
                        .WithMany("CountryModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Country_User1");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.CustomerAddress", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.City", "City")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_CustomerAddress_City")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Country", "Country")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_CustomerAddress_Country")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "CreatedBy")
                        .WithMany("CustomerAddressCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_CustomerAddress_Customer1")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "Customer")
                        .WithMany("CustomerAddressCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_CustomerAddress_Customer")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "DeletedBy")
                        .WithMany("CustomerAddressDeletedBy")
                        .HasForeignKey("DeletedById")
                        .HasConstraintName("FK_CustomerAddress_Customer3");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.District", "District")
                        .WithMany("CustomerAddresses")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK_CustomerAddress_District")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "ModifiedBy")
                        .WithMany("CustomerAddressModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_CustomerAddress_Customer2");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("CreatedBy");

                    b.Navigation("Customer");

                    b.Navigation("DeletedBy");

                    b.Navigation("District");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.CustomerDetail", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "Customer")
                        .WithOne("CustomerDetail")
                        .HasForeignKey("BootcampMarket.Data.MSSQL.Entity.CustomerDetail", "CustomerId")
                        .HasConstraintName("FK_CustomerDetail_Customer1")
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.District", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_District_City")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "CreatedBy")
                        .WithMany("DistrictCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_District_User")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "DeletedBy")
                        .WithMany("DistrictDeletedBy")
                        .HasForeignKey("DeletedById")
                        .HasConstraintName("FK_District_User2");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "ModifiedBy")
                        .WithMany("DistrictModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_District_User1");

                    b.Navigation("City");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Product", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "CreatedBy")
                        .WithMany("ProductCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Product_User2")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "DeletedBy")
                        .WithMany("ProductDeletedBy")
                        .HasForeignKey("DeletedById")
                        .HasConstraintName("FK_Product_User1");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "ModifiedBy")
                        .WithMany("ProductModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Product_User");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.ProductComment", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "CreatedBy")
                        .WithMany("ProductCommentCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_ProductComment_Customer1")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "Customer")
                        .WithMany("ProductCommentCustomers")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_ProductComment_Customer")
                        .IsRequired();

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Customer", "DeletedBy")
                        .WithMany("ProductCommentDeletedBy")
                        .HasForeignKey("DeletedById")
                        .HasConstraintName("FK_ProductComment_Customer2");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.Product", "Product")
                        .WithMany("ProductComments")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductComment_Product")
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Customer");

                    b.Navigation("DeletedBy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.User", b =>
                {
                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "CreatedBy")
                        .WithMany("InverseCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_User_User");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "DeletedBy")
                        .WithMany("InverseDeletedBy")
                        .HasForeignKey("DeletedById")
                        .HasConstraintName("FK_User_User2");

                    b.HasOne("BootcampMarket.Data.MSSQL.Entity.User", "ModifiedBy")
                        .WithMany("InverseModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_User_User1");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.City", b =>
                {
                    b.Navigation("CustomerAddresses");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CustomerAddresses");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Customer", b =>
                {
                    b.Navigation("CustomerAddressCreatedBy");

                    b.Navigation("CustomerAddressCustomers");

                    b.Navigation("CustomerAddressDeletedBy");

                    b.Navigation("CustomerAddressModifiedBy");

                    b.Navigation("CustomerDetail");

                    b.Navigation("ProductCommentCreatedBy");

                    b.Navigation("ProductCommentCustomers");

                    b.Navigation("ProductCommentDeletedBy");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.District", b =>
                {
                    b.Navigation("CustomerAddresses");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.Product", b =>
                {
                    b.Navigation("ProductComments");
                });

            modelBuilder.Entity("BootcampMarket.Data.MSSQL.Entity.User", b =>
                {
                    b.Navigation("CityCreatedBy");

                    b.Navigation("CityDeletedBy");

                    b.Navigation("CityModifiedBy");

                    b.Navigation("CountryCreatedBy");

                    b.Navigation("CountryDeletedBy");

                    b.Navigation("CountryModifiedBy");

                    b.Navigation("DistrictCreatedBy");

                    b.Navigation("DistrictDeletedBy");

                    b.Navigation("DistrictModifiedBy");

                    b.Navigation("InverseCreatedBy");

                    b.Navigation("InverseDeletedBy");

                    b.Navigation("InverseModifiedBy");

                    b.Navigation("ProductCreatedBy");

                    b.Navigation("ProductDeletedBy");

                    b.Navigation("ProductModifiedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
